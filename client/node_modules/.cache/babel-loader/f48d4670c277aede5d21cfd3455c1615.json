{"ast":null,"code":"import _slicedToArray from\"/Users/evansrm5/Desktop/Bootcamp/shop-shop/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect}from\"react\";import{useQuery}from\"@apollo/client\";import ProductItem from\"../ProductItem\";import{useStoreContext}from\"../../utils/GlobalState\";import{UPDATE_PRODUCTS}from\"../../utils/actions\";import{QUERY_PRODUCTS}from\"../../utils/queries\";import{idbPromise}from\"../../utils/helpers\";import spinner from\"../../assets/spinner.gif\";function ProductList(){var _useStoreContext=useStoreContext(),_useStoreContext2=_slicedToArray(_useStoreContext,2),state=_useStoreContext2[0],dispatch=_useStoreContext2[1];var currentCategory=state.currentCategory;var _useQuery=useQuery(QUERY_PRODUCTS),loading=_useQuery.loading,data=_useQuery.data;useEffect(function(){if(data){dispatch({type:UPDATE_PRODUCTS,products:data.products});data.products.forEach(function(product){idbPromise('products','put',product);});// add else if to check if `loading` is undefined in `useQuery()` Hook\n}else if(!loading){// since we're offline, get all of the data from the `products` store\nidbPromise('products','get').then(function(products){// use retrieved data to set global state for offline browsing\ndispatch({type:UPDATE_PRODUCTS,products:products});});}},[data,loading,dispatch]);function filterProducts(){if(!currentCategory){return state.products;}return state.products.filter(function(product){return product.category._id===currentCategory;});}return/*#__PURE__*/React.createElement(\"div\",{className:\"my-2\"},/*#__PURE__*/React.createElement(\"h2\",null,\"Our Products:\"),state.products.length?/*#__PURE__*/React.createElement(\"div\",{className:\"flex-row\"},filterProducts().map(function(product){return/*#__PURE__*/React.createElement(ProductItem,{key:product._id,_id:product._id,image:product.image,name:product.name,price:product.price,quantity:product.quantity});})):/*#__PURE__*/React.createElement(\"h3\",null,\"You haven't added any products yet!\"),loading?/*#__PURE__*/React.createElement(\"img\",{src:spinner,alt:\"loading\"}):null);}export default ProductList;","map":{"version":3,"sources":["/Users/evansrm5/Desktop/Bootcamp/shop-shop/client/src/components/ProductList/index.js"],"names":["React","useEffect","useQuery","ProductItem","useStoreContext","UPDATE_PRODUCTS","QUERY_PRODUCTS","idbPromise","spinner","ProductList","state","dispatch","currentCategory","loading","data","type","products","forEach","product","then","filterProducts","filter","category","_id","length","map","image","name","price","quantity"],"mappings":"wKAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,QAAT,KAAyB,gBAAzB,CAEA,MAAOC,CAAAA,WAAP,KAAwB,gBAAxB,CACA,OAASC,eAAT,KAAgC,yBAAhC,CACA,OAASC,eAAT,KAAgC,qBAAhC,CACA,OAASC,cAAT,KAA+B,qBAA/B,CACA,OAASC,UAAT,KAA2B,qBAA3B,CAEA,MAAOC,CAAAA,OAAP,KAAoB,0BAApB,CAEA,QAASC,CAAAA,WAAT,EAAuB,CACtB,qBAA0BL,eAAe,EAAzC,sDAAOM,KAAP,sBAAcC,QAAd,sBAEA,GAAQC,CAAAA,eAAR,CAA4BF,KAA5B,CAAQE,eAAR,CAEA,cAA0BV,QAAQ,CAACI,cAAD,CAAlC,CAAQO,OAAR,WAAQA,OAAR,CAAiBC,IAAjB,WAAiBA,IAAjB,CAEAb,SAAS,CAAC,UAAM,CACf,GAAGa,IAAH,CAAS,CACRH,QAAQ,CAAC,CACRI,IAAI,CAAEV,eADE,CAERW,QAAQ,CAAEF,IAAI,CAACE,QAFP,CAAD,CAAR,CAKAF,IAAI,CAACE,QAAL,CAAcC,OAAd,CAAsB,SAACC,OAAD,CAAa,CAClCX,UAAU,CAAC,UAAD,CAAa,KAAb,CAAoBW,OAApB,CAAV,CACA,CAFD,EAGA;AACA,CAVD,IAUO,IAAI,CAACL,OAAL,CAAc,CACpB;AACAN,UAAU,CAAC,UAAD,CAAa,KAAb,CAAV,CAA8BY,IAA9B,CAAmC,SAACH,QAAD,CAAc,CAChD;AACAL,QAAQ,CAAC,CACRI,IAAI,CAAEV,eADE,CAERW,QAAQ,CAAEA,QAFF,CAAD,CAAR,CAIA,CAND,EAOA,CACD,CArBQ,CAqBN,CAACF,IAAD,CAAOD,OAAP,CAAgBF,QAAhB,CArBM,CAAT,CAwBA,QAASS,CAAAA,cAAT,EAA0B,CACzB,GAAI,CAACR,eAAL,CAAsB,CACrB,MAAOF,CAAAA,KAAK,CAACM,QAAb,CACA,CAED,MAAON,CAAAA,KAAK,CAACM,QAAN,CAAeK,MAAf,CACN,SAACH,OAAD,QAAaA,CAAAA,OAAO,CAACI,QAAR,CAAiBC,GAAjB,GAAyBX,eAAtC,EADM,CAAP,CAGA,CAED,mBACC,2BAAK,SAAS,CAAC,MAAf,eACC,8CADD,CAEEF,KAAK,CAACM,QAAN,CAAeQ,MAAf,cACA,2BAAK,SAAS,CAAC,UAAf,EACEJ,cAAc,GAAGK,GAAjB,CAAqB,SAACP,OAAD,qBACrB,oBAAC,WAAD,EACC,GAAG,CAAEA,OAAO,CAACK,GADd,CAEC,GAAG,CAAEL,OAAO,CAACK,GAFd,CAGC,KAAK,CAAEL,OAAO,CAACQ,KAHhB,CAIC,IAAI,CAAER,OAAO,CAACS,IAJf,CAKC,KAAK,CAAET,OAAO,CAACU,KALhB,CAMC,QAAQ,CAAEV,OAAO,CAACW,QANnB,EADqB,EAArB,CADF,CADA,cAcA,oEAhBF,CAkBEhB,OAAO,cAAG,2BAAK,GAAG,CAAEL,OAAV,CAAmB,GAAG,CAAC,SAAvB,EAAH,CAAyC,IAlBlD,CADD,CAsBA,CAED,cAAeC,CAAAA,WAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useQuery } from \"@apollo/client\";\n\nimport ProductItem from \"../ProductItem\";\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { UPDATE_PRODUCTS } from \"../../utils/actions\";\nimport { QUERY_PRODUCTS } from \"../../utils/queries\";\nimport { idbPromise } from \"../../utils/helpers\";\n\nimport spinner from \"../../assets/spinner.gif\";\n\nfunction ProductList() {\n\tconst [state, dispatch] = useStoreContext();\n\n\tconst { currentCategory } = state;\n\n\tconst { loading, data } = useQuery(QUERY_PRODUCTS);\n\n\tuseEffect(() => {\n\t\tif(data) {\n\t\t\tdispatch({\n\t\t\t\ttype: UPDATE_PRODUCTS,\n\t\t\t\tproducts: data.products\n\t\t\t});\n\t\n\t\t\tdata.products.forEach((product) => {\n\t\t\t\tidbPromise('products', 'put', product);\n\t\t\t});\n\t\t\t// add else if to check if `loading` is undefined in `useQuery()` Hook\n\t\t} else if (!loading) {\n\t\t\t// since we're offline, get all of the data from the `products` store\n\t\t\tidbPromise('products', 'get').then((products) => {\n\t\t\t\t// use retrieved data to set global state for offline browsing\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: UPDATE_PRODUCTS,\n\t\t\t\t\tproducts: products\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t}, [data, loading, dispatch]);\n\t\n\n\tfunction filterProducts() {\n\t\tif (!currentCategory) {\n\t\t\treturn state.products;\n\t\t}\n\n\t\treturn state.products.filter(\n\t\t\t(product) => product.category._id === currentCategory\n\t\t);\n\t}\n\n\treturn (\n\t\t<div className=\"my-2\">\n\t\t\t<h2>Our Products:</h2>\n\t\t\t{state.products.length ? (\n\t\t\t\t<div className=\"flex-row\">\n\t\t\t\t\t{filterProducts().map((product) => (\n\t\t\t\t\t\t<ProductItem\n\t\t\t\t\t\t\tkey={product._id}\n\t\t\t\t\t\t\t_id={product._id}\n\t\t\t\t\t\t\timage={product.image}\n\t\t\t\t\t\t\tname={product.name}\n\t\t\t\t\t\t\tprice={product.price}\n\t\t\t\t\t\t\tquantity={product.quantity}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t<h3>You haven't added any products yet!</h3>\n\t\t\t)}\n\t\t\t{loading ? <img src={spinner} alt=\"loading\" /> : null}\n\t\t</div>\n\t);\n}\n\nexport default ProductList;\n"]},"metadata":{},"sourceType":"module"}