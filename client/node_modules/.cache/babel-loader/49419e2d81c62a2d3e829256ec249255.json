{"ast":null,"code":"var _jsxFileName = \"/Users/evansrm5/Desktop/Bootcamp/shop-shop/client/src/components/ProductList/index.js\";\nimport React, { useEffect } from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport ProductItem from \"../ProductItem\";\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { UPDATE_PRODUCTS } from \"../../utils/actions\";\nimport { QUERY_PRODUCTS } from \"../../utils/queries\";\nimport { idbPromise } from \"../../utils/helpers\";\nimport spinner from \"../../assets/spinner.gif\";\n\nfunction ProductList() {\n  const [state, dispatch] = useStoreContext();\n  const {\n    currentCategory\n  } = state;\n  const {\n    loading,\n    data\n  } = useQuery(QUERY_PRODUCTS);\n  useEffect(() => {\n    if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products\n      }); // but let's also take each product and save it to IndexedDB using the helper function\n\n      data.products.forEach(product => {\n        idbPromise(\"products\", \"put\", product);\n      });\n    }\n  }, [data, loading, dispatch]);\n\n  function filterProducts() {\n    if (!currentCategory) {\n      return state.products;\n    }\n\n    return state.products.filter(product => product.category._id === currentCategory);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"my-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 4\n    }\n  }, \"Our Products:\"), state.products.length ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, filterProducts().map(product => /*#__PURE__*/React.createElement(ProductItem, {\n    key: product._id,\n    _id: product._id,\n    image: product.image,\n    name: product.name,\n    price: product.price,\n    quantity: product.quantity,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }))) : /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, \"You haven't added any products yet!\"), loading ? /*#__PURE__*/React.createElement(\"img\", {\n    src: spinner,\n    alt: \"loading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 15\n    }\n  }) : null);\n}\n\nexport default ProductList;","map":{"version":3,"sources":["/Users/evansrm5/Desktop/Bootcamp/shop-shop/client/src/components/ProductList/index.js"],"names":["React","useEffect","useQuery","ProductItem","useStoreContext","UPDATE_PRODUCTS","QUERY_PRODUCTS","idbPromise","spinner","ProductList","state","dispatch","currentCategory","loading","data","type","products","forEach","product","filterProducts","filter","category","_id","length","map","image","name","price","quantity"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,gBAAzB;AAEA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,SAASC,eAAT,QAAgC,yBAAhC;AACA,SAASC,eAAT,QAAgC,qBAAhC;AACA,SAASC,cAAT,QAA+B,qBAA/B;AACA,SAASC,UAAT,QAA2B,qBAA3B;AAEA,OAAOC,OAAP,MAAoB,0BAApB;;AAEA,SAASC,WAAT,GAAuB;AACtB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,eAAe,EAAzC;AAEA,QAAM;AAAEQ,IAAAA;AAAF,MAAsBF,KAA5B;AAEA,QAAM;AAAEG,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAoBZ,QAAQ,CAACI,cAAD,CAAlC;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACf,QAAIa,IAAJ,EAAU;AACTH,MAAAA,QAAQ,CAAC;AACRI,QAAAA,IAAI,EAAEV,eADE;AAERW,QAAAA,QAAQ,EAAEF,IAAI,CAACE;AAFP,OAAD,CAAR,CADS,CAMT;;AACAF,MAAAA,IAAI,CAACE,QAAL,CAAcC,OAAd,CAAuBC,OAAD,IAAa;AAClCX,QAAAA,UAAU,CAAC,UAAD,EAAa,KAAb,EAAoBW,OAApB,CAAV;AACA,OAFD;AAGA;AACD,GAZQ,EAYN,CAACJ,IAAD,EAAOD,OAAP,EAAgBF,QAAhB,CAZM,CAAT;;AAcA,WAASQ,cAAT,GAA0B;AACzB,QAAI,CAACP,eAAL,EAAsB;AACrB,aAAOF,KAAK,CAACM,QAAb;AACA;;AAED,WAAON,KAAK,CAACM,QAAN,CAAeI,MAAf,CACLF,OAAD,IAAaA,OAAO,CAACG,QAAR,CAAiBC,GAAjB,KAAyBV,eADhC,CAAP;AAGA;;AAED,sBACC;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADD,EAEEF,KAAK,CAACM,QAAN,CAAeO,MAAf,gBACA;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEJ,cAAc,GAAGK,GAAjB,CAAsBN,OAAD,iBACrB,oBAAC,WAAD;AACC,IAAA,GAAG,EAAEA,OAAO,CAACI,GADd;AAEC,IAAA,GAAG,EAAEJ,OAAO,CAACI,GAFd;AAGC,IAAA,KAAK,EAAEJ,OAAO,CAACO,KAHhB;AAIC,IAAA,IAAI,EAAEP,OAAO,CAACQ,IAJf;AAKC,IAAA,KAAK,EAAER,OAAO,CAACS,KALhB;AAMC,IAAA,QAAQ,EAAET,OAAO,CAACU,QANnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CADF,CADA,gBAcA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAhBF,EAkBEf,OAAO,gBAAG;AAAK,IAAA,GAAG,EAAEL,OAAV;AAAmB,IAAA,GAAG,EAAC,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAAyC,IAlBlD,CADD;AAsBA;;AAED,eAAeC,WAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useQuery } from \"@apollo/client\";\n\nimport ProductItem from \"../ProductItem\";\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { UPDATE_PRODUCTS } from \"../../utils/actions\";\nimport { QUERY_PRODUCTS } from \"../../utils/queries\";\nimport { idbPromise } from \"../../utils/helpers\";\n\nimport spinner from \"../../assets/spinner.gif\";\n\nfunction ProductList() {\n\tconst [state, dispatch] = useStoreContext();\n\n\tconst { currentCategory } = state;\n\n\tconst { loading, data } = useQuery(QUERY_PRODUCTS);\n\n\tuseEffect(() => {\n\t\tif (data) {\n\t\t\tdispatch({\n\t\t\t\ttype: UPDATE_PRODUCTS,\n\t\t\t\tproducts: data.products,\n\t\t\t});\n\n\t\t\t// but let's also take each product and save it to IndexedDB using the helper function\n\t\t\tdata.products.forEach((product) => {\n\t\t\t\tidbPromise(\"products\", \"put\", product);\n\t\t\t});\n\t\t}\n\t}, [data, loading, dispatch]);\n\n\tfunction filterProducts() {\n\t\tif (!currentCategory) {\n\t\t\treturn state.products;\n\t\t}\n\n\t\treturn state.products.filter(\n\t\t\t(product) => product.category._id === currentCategory\n\t\t);\n\t}\n\n\treturn (\n\t\t<div className=\"my-2\">\n\t\t\t<h2>Our Products:</h2>\n\t\t\t{state.products.length ? (\n\t\t\t\t<div className=\"flex-row\">\n\t\t\t\t\t{filterProducts().map((product) => (\n\t\t\t\t\t\t<ProductItem\n\t\t\t\t\t\t\tkey={product._id}\n\t\t\t\t\t\t\t_id={product._id}\n\t\t\t\t\t\t\timage={product.image}\n\t\t\t\t\t\t\tname={product.name}\n\t\t\t\t\t\t\tprice={product.price}\n\t\t\t\t\t\t\tquantity={product.quantity}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t<h3>You haven't added any products yet!</h3>\n\t\t\t)}\n\t\t\t{loading ? <img src={spinner} alt=\"loading\" /> : null}\n\t\t</div>\n\t);\n}\n\nexport default ProductList;\n"]},"metadata":{},"sourceType":"module"}